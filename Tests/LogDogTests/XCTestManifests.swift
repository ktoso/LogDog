#if !canImport(ObjectiveC)
    import XCTest

    extension AnyLogAppenderTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__AnyLogAppenderTests = [
            ("testAppender", testAppender),
            ("testBody", testBody),
        ]
    }

    extension AnyLogSinkTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__AnyLogSinkTests = [
            ("testBody", testBody),
            ("testSink", testSink),
        ]
    }

    extension FilterTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__FilterTests = [
            ("testFilter", testFilter),
            ("testMatch", testMatch),
        ]
    }

    extension HooksTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__HooksTests = [
            ("testHook", testHook),
            ("testMultipleHooks", testMultipleHooks),
        ]
    }

    extension LazyTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LazyTests = [
            ("testLazy", testLazy),
        ]
    }

    extension LogHelperTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogHelperTests = [
            ("testBasename", testBasename),
            ("testDataFormat", testDataFormat),
            ("testDateFormat", testDateFormat),
            ("testDispatchQueue", testDispatchQueue),
        ]
    }

    extension LogParametersTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogParametersTests = [
            ("testParameterKey", testParameterKey),
            ("testParameters", testParameters),
        ]
    }

    extension LogSchedulerTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogSchedulerTests = [
            ("testDispatchQueue", testDispatchQueue),
            ("testDispatchQueueImmediate", testDispatchQueueImmediate),
            ("testOpeationQueue", testOpeationQueue),
            ("testOperationQueueImmediate", testOperationQueueImmediate),
        ]
    }

    extension LogSinksConcatTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogSinksConcatTests = [
            ("testConcat", testConcat),
            ("testNil", testNil),
            ("testThrow", testThrow),
        ]
    }

    extension LogSinksSinkOnTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogSinksSinkOnTests = [
            ("testSinkOn", testSinkOn),
        ]
    }

    extension LogStringifyTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__LogStringifyTests = [
            ("testClear", testClear),
            ("testDefault", testDefault),
            ("testMetadataValueAny", testMetadataValueAny),
            ("testSet", testSet),
            ("testSetAndUse", testSetAndUse),
            ("testUse", testUse),
        ]
    }

    extension MemoryLogAppenderTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__MemoryLogAppenderTests = [
            ("testAppend", testAppend),
        ]
    }

    extension MultiplexLogAppenderTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__MultiplexLogAppenderTests = [
            ("testAppend", testAppend),
        ]
    }

    extension TestLogAppenderTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__TestLogAppenderTests = [
            ("testAppend", testAppend),
        ]
    }

    extension UnwrapTests {
        // DO NOT MODIFY: This is autogenerated, use:
        //   `swift test --generate-linuxmain`
        // to regenerate.
        static let __allTests__UnwrapTests = [
            ("testUnwrap", testUnwrap),
        ]
    }

    public func __allTests() -> [XCTestCaseEntry] {
        [
            testCase(AnyLogAppenderTests.__allTests__AnyLogAppenderTests),
            testCase(AnyLogSinkTests.__allTests__AnyLogSinkTests),
            testCase(FilterTests.__allTests__FilterTests),
            testCase(HooksTests.__allTests__HooksTests),
            testCase(LazyTests.__allTests__LazyTests),
            testCase(LogHelperTests.__allTests__LogHelperTests),
            testCase(LogParametersTests.__allTests__LogParametersTests),
            testCase(LogSchedulerTests.__allTests__LogSchedulerTests),
            testCase(LogSinksConcatTests.__allTests__LogSinksConcatTests),
            testCase(LogSinksSinkOnTests.__allTests__LogSinksSinkOnTests),
            testCase(LogStringifyTests.__allTests__LogStringifyTests),
            testCase(MemoryLogAppenderTests.__allTests__MemoryLogAppenderTests),
            testCase(MultiplexLogAppenderTests.__allTests__MultiplexLogAppenderTests),
            testCase(TestLogAppenderTests.__allTests__TestLogAppenderTests),
            testCase(UnwrapTests.__allTests__UnwrapTests),
        ]
    }
#endif
